// <auto-generated />
using System;
using LabManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabManagementSystem.Data.Migrations
{
    [DbContext(typeof(LabManagementContext))]
    partial class LabManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LabManagementSystem.Data.Models.BuildingModel", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar")
                        .HasColumnName("BuildingName");

                    b.Property<string>("CampusName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CampusName");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Name");

                    b.HasIndex("CampusName");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.CampusModel", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar")
                        .HasColumnName("CampusName");

                    b.HasKey("Name");

                    b.ToTable("Campuses");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.ChemicalModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ChemicalId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BatchCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("CasCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Formula")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Hazards")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("IsCoshhCompleted")
                        .HasColumnType("bit")
                        .HasColumnName("COSHHCompleted");

                    b.Property<string>("LocationDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("LocationRoomCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("MsdsUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("OrderedByObjectId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<decimal>("PurityGrade")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("StockLevel")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<decimal>("TriggerLevel")
                        .HasPrecision(20, 10)
                        .HasColumnType("decimal");

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("LocationRoomCode");

                    b.ToTable("Chemicals");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.EquipmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("EquipmentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustodianUserObjectId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<byte[]>("DocumentationFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentationFileContentType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("DocumentationUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("GeneralInfo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LocationRoomCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("LocationRoomCode");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.FloorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("FloorId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar")
                        .HasColumnName("BuildingName");

                    b.Property<byte[]>("MapImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("BuildingName");

                    b.ToTable("Floors");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.FormCategoryModel", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.HasKey("Name");

                    b.ToTable("FormCategories");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.FormDocumentationFileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("FileDocumentationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName");

                    b.ToTable("FormDocumentationFiles");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.FormDocumentationUrlModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("UrlDocumentationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName");

                    b.ToTable("FormDocumentationUrls");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.LogbookEntryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("EntryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer");

                    b.Property<string>("UserObjectId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.ToTable("LogbookEntries");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.OrderModel", b =>
                {
                    b.Property<int>("PurchaseRequestId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit")
                        .HasColumnName("Delivered");

                    b.Property<DateTime?>("PredictedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PurchaseRequestId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.PurchaseRequestModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("RequestId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BudgetCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryBuildingName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("IsCOSHHRequired")
                        .HasColumnType("bit")
                        .HasColumnName("COSHHRequired");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit")
                        .HasColumnName("Processed");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("RequesterObjectId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryBuildingName");

                    b.ToTable("PurchaseRequests");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.RoomDocumentationFileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("FileDocumentationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("RoomCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("RoomCode");

                    b.ToTable("RoomDocumentationFiles");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.RoomDocumentationUrlModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("UrlDocumentationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("RoomCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.HasIndex("RoomCode");

                    b.ToTable("RoomDocumentationUrls");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.RoomMapHotspotModel", b =>
                {
                    b.Property<string>("RoomCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<int>("PointOneX")
                        .HasColumnType("integer");

                    b.Property<int>("PointOneY")
                        .HasColumnType("integer");

                    b.Property<int>("PointTwoX")
                        .HasColumnType("integer");

                    b.Property<int>("PointTwoY")
                        .HasColumnType("integer");

                    b.HasKey("RoomCode");

                    b.ToTable("RoomMapHotspots");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.RoomModel", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<int>("FloorId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("TimetableUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.HasKey("Code");

                    b.HasIndex("FloorId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.StaffModel", b =>
                {
                    b.Property<string>("UserObjectId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.HasKey("UserObjectId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.BuildingModel", b =>
                {
                    b.HasOne("LabManagementSystem.Data.Models.CampusModel", "Campus")
                        .WithMany("Buildings")
                        .HasForeignKey("CampusName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.ChemicalModel", b =>
                {
                    b.HasOne("LabManagementSystem.Data.Models.RoomModel", "LocationRoom")
                        .WithMany("Chemicals")
                        .HasForeignKey("LocationRoomCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocationRoom");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.EquipmentModel", b =>
                {
                    b.HasOne("LabManagementSystem.Data.Models.RoomModel", "LocationRoom")
                        .WithMany("Equipment")
                        .HasForeignKey("LocationRoomCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocationRoom");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.FloorModel", b =>
                {
                    b.HasOne("LabManagementSystem.Data.Models.BuildingModel", "Building")
                        .WithMany("Floors")
                        .HasForeignKey("BuildingName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.FormDocumentationFileModel", b =>
                {
                    b.HasOne("LabManagementSystem.Data.Models.FormCategoryModel", "Category")
                        .WithMany("DocumentationFiles")
                        .HasForeignKey("CategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.FormDocumentationUrlModel", b =>
                {
                    b.HasOne("LabManagementSystem.Data.Models.FormCategoryModel", "Category")
                        .WithMany("DocumentationUrls")
                        .HasForeignKey("CategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.LogbookEntryModel", b =>
                {
                    b.HasOne("LabManagementSystem.Data.Models.EquipmentModel", "Equipment")
                        .WithMany("LogbookEntries")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.OrderModel", b =>
                {
                    b.HasOne("LabManagementSystem.Data.Models.PurchaseRequestModel", "PurchaseRequest")
                        .WithMany("Orders")
                        .HasForeignKey("PurchaseRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseRequest");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.PurchaseRequestModel", b =>
                {
                    b.HasOne("LabManagementSystem.Data.Models.BuildingModel", "DeliveryBuilding")
                        .WithMany("PurchaseRequests")
                        .HasForeignKey("DeliveryBuildingName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryBuilding");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.RoomDocumentationFileModel", b =>
                {
                    b.HasOne("LabManagementSystem.Data.Models.RoomModel", "Room")
                        .WithMany("DocumentationFiles")
                        .HasForeignKey("RoomCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.RoomDocumentationUrlModel", b =>
                {
                    b.HasOne("LabManagementSystem.Data.Models.RoomModel", "Room")
                        .WithMany("DocumentationUrls")
                        .HasForeignKey("RoomCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.RoomMapHotspotModel", b =>
                {
                    b.HasOne("LabManagementSystem.Data.Models.RoomModel", "Room")
                        .WithOne("MapHotspot")
                        .HasForeignKey("LabManagementSystem.Data.Models.RoomMapHotspotModel", "RoomCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.RoomModel", b =>
                {
                    b.HasOne("LabManagementSystem.Data.Models.FloorModel", "Floor")
                        .WithMany("Rooms")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.BuildingModel", b =>
                {
                    b.Navigation("Floors");

                    b.Navigation("PurchaseRequests");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.CampusModel", b =>
                {
                    b.Navigation("Buildings");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.EquipmentModel", b =>
                {
                    b.Navigation("LogbookEntries");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.FloorModel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.FormCategoryModel", b =>
                {
                    b.Navigation("DocumentationFiles");

                    b.Navigation("DocumentationUrls");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.PurchaseRequestModel", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("LabManagementSystem.Data.Models.RoomModel", b =>
                {
                    b.Navigation("Chemicals");

                    b.Navigation("DocumentationFiles");

                    b.Navigation("DocumentationUrls");

                    b.Navigation("Equipment");

                    b.Navigation("MapHotspot")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
